// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0

package db

import (
	"database/sql"
	"fmt"
	"time"
)

type EnumApprovalStatus string

const (
	EnumApprovalStatusPending  EnumApprovalStatus = "pending"
	EnumApprovalStatusApproved EnumApprovalStatus = "approved"
	EnumApprovalStatusRejected EnumApprovalStatus = "rejected"
)

func (e *EnumApprovalStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = EnumApprovalStatus(s)
	case string:
		*e = EnumApprovalStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for EnumApprovalStatus: %T", src)
	}
	return nil
}

type EnumPaymentStatus string

const (
	EnumPaymentStatusPaid   EnumPaymentStatus = "paid"
	EnumPaymentStatusUnpaid EnumPaymentStatus = "unpaid"
)

func (e *EnumPaymentStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = EnumPaymentStatus(s)
	case string:
		*e = EnumPaymentStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for EnumPaymentStatus: %T", src)
	}
	return nil
}

type Borrower struct {
	ID            int64     `json:"id"`
	UserID        int64     `json:"user_id"`
	LoanID        int64     `json:"loan_id"`
	IsActive      bool      `json:"is_active"`
	CreatedBy     string    `json:"created_by"`
	CreatedAt     time.Time `json:"created_at"`
	LastUpdatedBy string    `json:"last_updated_by"`
	UpdatedAt     time.Time `json:"updated_at"`
	IpFrom        string    `json:"ip_from"`
	UserAgent     string    `json:"user_agent"`
}

type Loan struct {
	ID              int64              `json:"id"`
	Amount          string             `json:"amount"`
	AmountNeedToPay string             `json:"amount_need_to_pay"`
	Term            int32              `json:"term"`
	ApprovalStatus  EnumApprovalStatus `json:"approval_status"`
	IsActive        bool               `json:"is_active"`
	RepaymentStatus EnumPaymentStatus  `json:"repayment_status"`
	CreatedBy       string             `json:"created_by"`
	CreatedAt       time.Time          `json:"created_at"`
	LastUpdatedBy   string             `json:"last_updated_by"`
	UpdatedAt       time.Time          `json:"updated_at"`
	IpFrom          string             `json:"ip_from"`
	UserAgent       string             `json:"user_agent"`
}

type Payment struct {
	ID int64 `json:"id"`
	// payment made against loan
	LoanID int64 `json:"loan_id"`
	// payment made by
	UserID        int64     `json:"user_id"`
	Amount        string    `json:"amount"`
	CreatedBy     string    `json:"created_by"`
	CreatedAt     time.Time `json:"created_at"`
	LastUpdatedBy string    `json:"last_updated_by"`
	UpdatedAt     time.Time `json:"updated_at"`
	IpFrom        string    `json:"ip_from"`
	UserAgent     string    `json:"user_agent"`
}

type User struct {
	ID                int64          `json:"id"`
	Name              string         `json:"name"`
	Mobile            sql.NullString `json:"mobile"`
	Address           sql.NullString `json:"address"`
	Email             string         `json:"email"`
	HashedPassword    string         `json:"hashed_password"`
	PasswordChangedAt time.Time      `json:"password_changed_at"`
	IsActive          bool           `json:"is_active"`
	CreatedBy         string         `json:"created_by"`
	CreatedAt         time.Time      `json:"created_at"`
	LastUpdatedBy     string         `json:"last_updated_by"`
	UpdatedAt         time.Time      `json:"updated_at"`
	IpFrom            string         `json:"ip_from"`
	UserAgent         string         `json:"user_agent"`
}
